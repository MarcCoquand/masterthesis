Configuring cryptohash-0.11.9...
Preprocessing library for cryptohash-0.11.9..
Building library for cryptohash-0.11.9..
[ 1 of 21] Compiling Crypto.Hash.Internal ( Crypto/Hash/Internal.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Internal.o )
[ 2 of 21] Compiling Crypto.Hash.MD2  ( Crypto/Hash/MD2.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/MD2.o )
[ 3 of 21] Compiling Crypto.Hash.MD4  ( Crypto/Hash/MD4.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/MD4.o )
[ 4 of 21] Compiling Crypto.Hash.MD5  ( Crypto/Hash/MD5.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/MD5.o )
[ 5 of 21] Compiling Crypto.Hash.RIPEMD160 ( Crypto/Hash/RIPEMD160.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/RIPEMD160.o )
[ 6 of 21] Compiling Crypto.Hash.SHA1 ( Crypto/Hash/SHA1.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA1.o )
[ 7 of 21] Compiling Crypto.Hash.SHA224 ( Crypto/Hash/SHA224.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA224.o )
[ 8 of 21] Compiling Crypto.Hash.SHA256 ( Crypto/Hash/SHA256.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA256.o )
[ 9 of 21] Compiling Crypto.Hash.SHA3 ( Crypto/Hash/SHA3.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA3.o )

Crypto/Hash/SHA3.hs:61:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
61 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
62 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
62 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA3.hs:62:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
   |
62 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 21] Compiling Crypto.Hash.SHA384 ( Crypto/Hash/SHA384.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA384.o )
[11 of 21] Compiling Crypto.Hash.SHA512 ( Crypto/Hash/SHA512.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA512.o )

Crypto/Hash/SHA512.hs:51:11: warning: [-Winline-rule-shadowing]
    Rule "digestSize" may never fire
      because ‘B.length’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘B.length’
   |
51 | {-# RULES "digestSize" B.length (finalize init) = digestSize #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
55 | {-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
55 | {-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:55:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
   |
55 | {-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 21] Compiling Crypto.Hash.SHA512t ( Crypto/Hash/SHA512t.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/SHA512t.o )

on the commandline: warning: [-Wtrustworthy-safe]
    ‘Crypto.Hash.SHA512t’ is marked as Trustworthy but has been inferred as safe!
[13 of 21] Compiling Crypto.Hash.Skein256 ( Crypto/Hash/Skein256.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Skein256.o )

Crypto/Hash/Skein256.hs:53:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
53 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein256.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[14 of 21] Compiling Crypto.Hash.Skein512 ( Crypto/Hash/Skein512.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Skein512.o )

Crypto/Hash/Skein512.hs:53:11: warning: [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
53 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Probable fix: add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein512.hs:54:11: warning: [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because ‘L.toChunks’ might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for ‘L.toChunks’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 21] Compiling Crypto.Hash.Tiger ( Crypto/Hash/Tiger.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Tiger.o )
[16 of 21] Compiling Crypto.Hash.Types ( Crypto/Hash/Types.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Types.o )
[17 of 21] Compiling Crypto.Hash      ( Crypto/Hash.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash.o )
[18 of 21] Compiling Crypto.Hash.Whirlpool ( Crypto/Hash/Whirlpool.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/Hash/Whirlpool.o )
[19 of 21] Compiling Crypto.MAC       ( Crypto/MAC.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/MAC.o )
[20 of 21] Compiling Crypto.MAC.HMAC  ( Crypto/MAC/HMAC.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/MAC/HMAC.o )

on the commandline: warning: [-Wtrustworthy-safe]
    ‘Crypto.MAC.HMAC’ is marked as Trustworthy but has been inferred as safe!
[21 of 21] Compiling Crypto.MAC.SHA3  ( Crypto/MAC/SHA3.hs, .stack-work/dist/x86_64-linux-tinfo6/Cabal-2.4.0.1/build/Crypto/MAC/SHA3.o )
Installing library in /home/marccoquand/.stack/snapshots/x86_64-linux-tinfo6/lts-13.15/8.6.4/lib/x86_64-linux-ghc-8.6.4/cryptohash-0.11.9-DXakb1roPqd7VAuD9g1h30
Registering library for cryptohash-0.11.9..
