@article{bergklaas,
    author = {Berg, Klaas},
    year = {1995},
    month = {01},
    pages = {},
    title = {Software measurement and functional programming},
    journal = {Current Sociology - CURR SOCIOL}
}
@misc{wikipedia_pure, 
    title={Pure function},
    note={\url{https://en.wikipedia.org/wiki/Pure_function}, accessed Feb 2019}, 
    journal={Wikipedia},
    publisher={Wikimedia Foundation},
    year={2018},
    month={Aug}
} 
@inproceedings{McCabe,
    author = {McCabe, Thomas J.},
    title = {A Complexity Measure},
    booktitle = {Proceedings of the 2Nd International Conference on Software Engineering},
    series = {ICSE '76},
    year = {1976},
    location = {San Francisco, California, USA},
    pages = {407--},
    url = {http://dl.acm.org/citation.cfm?id=800253.807712},
    acmid = {807712},
    publisher = {IEEE Computer Society Press},
    address = {Los Alamitos, CA, USA},
    keywords = {Basis, Complexity measure, Control flow, Decomposition, Graph theory, Independence, Linear, Modularization, Programming, Reduction, Software, Testing},
} 

@article{GREEN1996131,
	title = "Usability Analysis of Visual Programming Environments: A 'Cognitive Dimensions' Framework",
	journal = "Journal of Visual Languages \& Computing",
	volume = "7",
	number = "2",
	pages = "131 - 174",
	year = "1996",
	issn = "1045-926X",
	doi = "https://doi.org/10.1006/jvlc.1996.0009",
	url = "http://www.sciencedirect.com/science/article/pii/S1045926X96900099",
	author = "T.R.G. Green and M. Petre",
	abstract = "The cognitive dimensions framework is a broad-brush evaluation technique for interactive devices and for non-interactive notations. It sets out a small vocabulary of terms designed to capture the cognitively-relevant aspects of structure, and shows how they can be traded off against each other. The purpose of this paper is to propose the framework as an evaluation technique for visual programming environments. We apply it to two commercially-available dataflow languages (with further examples from other systems) and conclude that it is effective and insightful; other HCI-based evaluation techniques focus on different aspects and would make good complements. Insofar as the examples we used are representative, current VPLs are successful in achieving a good ‘closeness of match’, but designers need to consider the ‘viscosity ’ (resistance to local change) and the ‘secondary notation’ (possibility of conveying extra meaning by choice of layout, colour, etc.)."
}
